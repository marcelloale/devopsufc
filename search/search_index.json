{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem vindo ao nosso Repositorio de Estudos Nossos encontros s\u00e3o realizados no Campus de Quixad\u00e1 UFC . Sobre o grupo de estudos Uma iniciativa do projeto Difus\u00e3o e implementa\u00e7\u00e3o de novas tecnologias em ambientes DEVOPS promovido pela Universidade Federal do Cear\u00e1 (UFC) atrav\u00e9s do Programa de Acolhimento e Incentivo a Perman\u00eancia no curso de Redes de Computadores. O projeto visa a ambienta\u00e7\u00e3o dos alunos ingressantes e a redu\u00e7\u00e3o da evas\u00e3o. engajamento dos alunos - Comunidade de Estudo. vis\u00e3o do mercado - Entender o que est\u00e1 sendo usado no mercado de trabalho. novas tecnologias - Apresenta\u00e7\u00f5es de ferramentas. treinamento b\u00e1sico - Vis\u00e3o basica do funcionamento. Cursos, livros etc - Direncionamento de conteudo. Organiza\u00e7\u00e3o do site boas_vindas # Pagina Inicial sobre o projeto. conte\u00fados/ # Pagina de listagem dos conteudos. slide_assunto # Slides apresentados nos encontros. rascunho # Rascunho da pesquisa para realizar os encontros ... # Outros arquivos relacionados.","title":"Home"},{"location":"#_1","text":"","title":""},{"location":"#bem-vindo-ao-nosso-repositorio-de-estudos","text":"Nossos encontros s\u00e3o realizados no Campus de Quixad\u00e1 UFC .","title":"Bem vindo ao nosso Repositorio de Estudos"},{"location":"#sobre-o-grupo-de-estudos","text":"Uma iniciativa do projeto Difus\u00e3o e implementa\u00e7\u00e3o de novas tecnologias em ambientes DEVOPS promovido pela Universidade Federal do Cear\u00e1 (UFC) atrav\u00e9s do Programa de Acolhimento e Incentivo a Perman\u00eancia no curso de Redes de Computadores. O projeto visa a ambienta\u00e7\u00e3o dos alunos ingressantes e a redu\u00e7\u00e3o da evas\u00e3o. engajamento dos alunos - Comunidade de Estudo. vis\u00e3o do mercado - Entender o que est\u00e1 sendo usado no mercado de trabalho. novas tecnologias - Apresenta\u00e7\u00f5es de ferramentas. treinamento b\u00e1sico - Vis\u00e3o basica do funcionamento. Cursos, livros etc - Direncionamento de conteudo.","title":"Sobre o grupo de estudos"},{"location":"#organizacao-do-site","text":"boas_vindas # Pagina Inicial sobre o projeto. conte\u00fados/ # Pagina de listagem dos conteudos. slide_assunto # Slides apresentados nos encontros. rascunho # Rascunho da pesquisa para realizar os encontros ... # Outros arquivos relacionados.","title":"Organiza\u00e7\u00e3o do site"},{"location":"conte%C3%BAdos/1.devops/","text":"Devops Slides Rascunho da Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre DevOps Marcello Alexandre - Curso de Redes de Computadores O que \u00e9 DevOps? N\u00e3o existe uma defini\u00e7\u00e3o espec\u00edfica por n\u00e3o haver um manifesto igual no '\u00e1gil' onde vc tem cartilha a ser \"seguida\" de forma que mesmo o devops sendo conhecido mundialmente, cada empresa adapta o conceito de acordo com as suas necessidades. E foi no evento Agile 2008 que se abriu caminhos para o DevOps, com discuss\u00f5es e debates acerca de infraestrutura \u00e1gil, ent\u00e3o no ano seguinte em 2009 surgiu o termo devops. [na imagem o manifesto agile e o link para o site] Bem o termo DevOps \u00e9 uma conjun\u00e7\u00e3o entre \u201cDevelopment\u201d (Desenvolvimento) e \u201cOperations\u201d (Opera\u00e7\u00e3o) ele surgiu com o intuito para resolver os problemas da abordagem tradicional no desenvolvimento de software onde nas metologias tradicionais a gente tinha ali papeis bem definidos (umas das mais conhecidas a cascata) A gente tem esse cen\u00e1rio onde o papel do time de desenvolvimento era converter requisitos em programas. E cabia \u00e0 equipe de opera\u00e7\u00f5es instalar e manter esses programas rodando adequadamente na infraestrutura existente. Ent\u00e3o \u00e9 aqui come\u00e7a os problemas a serem solucionados [imagem da serie ruptura apple+ sem dar spoiler da serie que pra mim \u00e9 a melhor de 2022, a serie apresenta na empresa q \u00e9 ambientado dois grupos que trabalham separadamente sem mesmo saber muito da existencia do outro mas mesmo assim existe uma especie de rivalidade mortal entre essas equipes e o deseronlar da historia \u00e9 eles se juntarem para tentar descobrir o que realmente acontece nesta empresa assim criando a trama] ent\u00e3o a gente tem esse cen\u00e1rio de dificuldade de comunica\u00e7\u00e3o entres as duas equipes em que cada um faz apenas sua parte e joga pro outro, nem preciso dizer a confus\u00e3o que isso dava Se deu pra entender bem \u00e9 aqui que o DevOps surgem em cima desse cen\u00e1rio e pra trazer essa explica\u00e7\u00e3o pra voc\u00eas eu fiz uma divis\u00e3o simb\u00f3lica onde vou falar sobre a cultura a carreira e o processo dividindo nessas 3 explica\u00e7\u00f5es porque foi a forma q me ajudou a entender e espero que facilite para voc\u00eas tamb\u00e9m Bem come\u00e7ando aqui pela cultura a solu\u00e7\u00e3o para seus problemas[imagem de gente feliz no slide] Aqui uma defini\u00e7\u00e3o do (Ken Mugragi) que \u00e9 um consultor de tecnologia ele fala bastante sobre devops fazendo palestras etc Modern Continuous Delivery \u2022 Ken Mugrage \u2022 GOTO 2020 [em ingl\u00eas] https://youtu.be/lBi85lNmKFw DevOps: Uma cultura em que as pessoas, independentemente do t\u00edtulo ou forma\u00e7\u00e3o, trabalham juntas para imaginar, desenvolver, implantar e operar um sistema. Ken Mugrage 2007: houve as primeiras iniciativas em um projeto de migra\u00e7\u00e3o de data center. Patrick Dubois (B\u00e9lgica) prop\u00f5e a cria\u00e7\u00e3o de um time de DevOps para melhorar a integra\u00e7\u00e3o e efici\u00eancia entre o time de desenvolvimento e opera\u00e7\u00f5es, pois havia um grande gargalo e um problema na cadeia de entrega.[na imagem tem o livro Manual do DevOps] 2008: Patrick Debois apresenta na Agile Conference (Toronto/CA) um modelo para solucionar os conflitos entre as \u00e1reas de desenvolvimento e opera\u00e7\u00f5es de TI, com foco em dar mais agilidade \u00e0 \u00e1rea de infraestrutura. 2009: Allspaw & Paul Hammond apresentam no Velocity (San Jose/CA) 10+ Deploys per day, propondo um novo modelo operacional para atender as mudan\u00e7as nos neg\u00f3cios. E assim, mudar a forma: \u201cDev\u2019s job is to add new features; Ops\u2019 job it to keep the site stable and fast\u201d. 2011-2012: l\u00edderes do setor de software (IBM, CA Technologies, etc.) aumentam a presen\u00e7a de DevOps tools no mercado empresarial. 2013: o livro The Phoenix Project, entre outros, traz conceitos de CI (Continuous Integration), CD (Continuous Delivery e Deployment), fundamentais para a propaga\u00e7\u00e3o das pr\u00e1ticas at\u00e9 hoje. 2014: come\u00e7a a gerar impacto positivo na \u00e1rea de TI \u2013 benef\u00edcios do DevOps. 2015: presen\u00e7a no Gartner Hype Cycle. O hype cycle identifica cinco est\u00e1gio no ciclo de vida tecnol\u00f3gico. A ideia central por tr\u00e1s do DevOps \u00e9 ter processos bem definidos, auto-matizar a\u00e7\u00f5es e possibilitar coopera\u00e7\u00e3o m\u00fatua. Dessa forma, os profissionais ficam livres para focar as suas atividades em solu\u00e7\u00f5es inteligentes (MUELLER, 2016). Com a lideran\u00e7a e o uso de ferramentas corretas, \u00e9 poss\u00edvel viabilizar um ambiente onde desenvolvedores e administradores de infraestrutura trabalhem em harmonia. A efici\u00eancia da cultura DevOps pode ser percebida quando a organiza\u00e7\u00e3o compreende o seu funcionamento. Na Figura do slide \u00e9 apresentado as \u00e1reas que se relacionam, formando o DevOps nessa interse\u00e7\u00e3o. Cada uma dessas \u00e1reas possui suas pr\u00f3prias metodologias, problemas e processos, de modo que, independentemente do setor, os profissionais devem estar aptos a resolver as problem\u00e1ticas que surgem no cotidiano. Vale lembrar que a inten\u00e7\u00e3o do DevOps \u00e9 criar formas de intera\u00e7\u00e3o entre as equipes, para que a passagem de atividades sejam simplificadas. Pilares do Devops CULTURA \u2013 Focar nas pessoas; melhorar comportamentos; abra\u00e7ar mudan\u00e7as e experimenta\u00e7\u00f5es; errar sem julgamentos (manter a seguran\u00e7a) e integrar Dev + Ops + TI + Produtos. AUTOMA\u00c7\u00c3O \u2013 Fazer pequenas e constantes entregas; integrar altera\u00e7\u00e3o de c\u00f3digo num reposit\u00f3rio central (CI); pipeline (IC, Automatiza\u00e7\u00e3o de Testes e Deploy) e orquestrar. FLUXO \u2013 Entregar valor para o usu\u00e1rio final (vis\u00e3o cliente); identificar o fluxo de valor e fazer fluir,sem interromper; enxutar processo e documenta\u00e7\u00e3o; eliminar desperd\u00edcio ( faturamento> gastos); perseguir a melhoria cont\u00ednua e fazer o simples. MEDI\u00c7\u00c3O \u2013 Medir e monitorar todo o ciclo (fluxos); identificar erros, defeitos e falhas; corrigir os problemas o quanto antes e melhorar o processo atrav\u00e9s de a\u00e7\u00f5es. COMPARTILHAMENTO \u2013 Compartilhar conhecimentos e experi\u00eancias; expor fracassos e sucessos; promover comunica\u00e7\u00e3o e colabora\u00e7\u00e3o entre os profissionais; integrar as \u00e1reas; feedbacks. Os 5 pilares devem ser seguidos e usados diariamente at\u00e9 que a Cultura DevOps seja vista como um identidade nas empresas e ela n\u00e3o \u00e9 responsabilidade de apenas um profissional, mas de todos que est\u00e3o envolvidos em todos os processos, desde do levantamento da necessidade do usu\u00e1rio at\u00e9 a coleta de feedbacks para melhorar processos, produtos e servi\u00e7os! Os objetivos do DevOps Metodologias de Desenvolvimento R\u00e1pido Metodologias R\u00e1pidas de Garantia de Qualidade Metodologias de implanta\u00e7\u00e3o r\u00e1pida Tempo de comercializa\u00e7\u00e3o mais r\u00e1pido Itera\u00e7\u00e3o e feedback cont\u00ednuo (comunica\u00e7\u00e3o forte e cont\u00ednua entre as partes interessadas - os usu\u00e1rios finais e clientes, propriet\u00e1rios de produtos, desenvolvimento, garantia de qualidade e engenheiros de produ\u00e7\u00e3o) Os benef\u00edcios do DevOps Estabiliza\u00e7\u00e3o do Ambiente Imp\u00f5e consist\u00eancia, aumenta o tempo de atividade Ciclo de desenvolvimento mais curto Gerenciar requisitos e reposit\u00f3rio de c\u00f3digo Maior velocidade de lan\u00e7amento Compila\u00e7\u00e3o cont\u00ednua, implanta\u00e7\u00f5es de bot\u00e3o Defeitos reduzidos Processos de regimento, testes automatizados M\u00e9tricas de Processo Acompanhe o tempo em cada est\u00e1gio e os erros e exce\u00e7\u00f5es O processo \"DevOps converge de Lean, gest\u00e3o e tecnologia\" -Fluxo r\u00e1pido e continuo: ir desenvolvimento que \u00e9 a ideia e colocar em produ\u00e7\u00e3o o mais rapido possivel de ponto a ponto -Feedback constante: as equipes que constroi os sistemas, aplica\u00e7\u00f5es, equipe de dev precisa do feed rapido e constante da equipe de ops como as coisas est\u00e3o funcionando ou n\u00e3o est\u00e3o funcionando entao \u00e9 fundamental esse feedback rapido e continuo e teste continuo. -aprendizado e experimenta\u00e7\u00e3o: experimentar e aprender com os erros por ser um cultura que tolerar erros -GEMUD e seguran\u00e7a continua: Gest\u00e3o de mudan\u00e7a e seguran\u00e7a da informa\u00e7\u00e3o n\u00e3o deixar por ultimo, ser trabalho ao longo da jornada e do desenvolvimento, desenvolver e testar ao mesmo tempo na esteira A integra\u00e7\u00e3o cont\u00ednua (CI, continuous integration) e a entrega cont\u00ednua (CD, continuous delivery) s\u00e3o pr\u00e1ticas da engenharia de software que visam a testar e disponibilizar o software de forma automatizada, cont\u00ednua e consistente (DESTRO; FRAN\u00c7A, 2019). Essas a\u00e7\u00f5es s\u00e3o aplicadas a projetos de desenvolvimento de software, com o intuito de manter o n\u00edvel de qualidade elevado, a estabilidade da aplica\u00e7\u00e3o e propiciar uma menor quantidade de erros. Essas pr\u00e1ticas s\u00e3o fixadas em um conjunto, intitulado pipeline, e organizadas de forma l\u00f3gica e sequencial, conforme a Figura 2. Para entender o CD \u00e9 preciso entender os tipos de servidores. O primeiro tipo \u00e9 o servidor de teste, que possui recursos limitados e \u00e9 utilizado para realizar os testes de forma mais controlada. O segundo \u00e9 o servidor de (aceita\u00e7\u00e3o)homologa\u00e7\u00e3o, que \u00e9 basicamente uma c\u00f3pia do servidor de produ\u00e7\u00e3o, possuindo integra\u00e7\u00e3o com todas as APIs (application programming interface; ou interface de programa\u00e7\u00e3o de aplica\u00e7\u00f5es, em portugu\u00eas) utilizadas. Com isso, os testes s\u00e3o realizados de forma mais fidedigna. Por fim, tem-se o servidor de produ\u00e7\u00e3o, que se refere ao ambiente final que \u00e9 acessado pelos usu\u00e1rios. Pipeline que \u00e9 uma palavra em ingles que no significado ao p\u00e9 da letra \u00e9 encanamento, aqueles tubos no supermario mas o termo \u00e9 utilizado na industria/mercado como conjunto de instru\u00e7\u00f5es ou uma ESTEIRA de processos ou comandos que algu\u00e9m ou algo deve seguir sempre, por exemplo uma pipeline de vendas, onde tem sempre os passos e estrat\u00e9gias a serem seguidas. No mundo de desenvolvimento uma pipeline(esteira) \u00e9 desenvolvida e pensada como uma forma de reduzir trabalhos manuais do nosso dia a dia : seja para testar novos codigos, quando ocorre grandes mudan\u00e7as no projeto, em teste de ferramentas necessarias, ou como valida\u00e7\u00e3o da altera\u00e7\u00e3o ent\u00e3o em um projeto onde varias pessoas estao trabalhando ao mesmo tempo de forma independente com esse processo \u00e9 possivel alcan\u00e7ar uma economia de tempo concluindo uma pipeline(esteira) \u00e9 esse conjunto de instru\u00e7\u00f5es, passos a serem executados de forma sequencial Para criar uma pipeline voc\u00ea precisa ter uma vis\u00e3o em detalhe da aplica\u00e7\u00e3o,do projeto, empresa, realmente conhecer bem para conseuir definir o tipo que ser\u00e1 implatado pois existe diversos cenarios. porem temos varias ferramentas que auxiliam/s\u00e3o utilizadas nesse processo :muitas dessas que oferecem servi\u00e7os de reposit\u00f3rio GitHub Actions \u2014 https://docs.github.com/pt/actions Azure DevOps Pipelines \u2014 https://docs.microsoft.com/pt-br/azure/architecture/example-scenario/apps/devops-dotnet-webapp GitLab Runners \u2014 https://docs.gitlab.com/runner/ Bitbucket Pipelines \u2014 https://bitbucket.org/product/br/features/pipelines :e tamb\u00e9m quem oferece servi\u00e7o focado em pipelines -CircleCI \u2014 https://circleci.com/ -Travis \u2014 https://travis-ci.org/ -Jenkins \u2014 https://www.jenkins.io/ Plano: gest\u00e3o de tarefas, hor\u00e1rios C\u00f3digo: desenvolvimento e revis\u00e3o de c\u00f3digo, ferramentas de gest\u00e3o do c\u00f3digo fonte, fus\u00e3o de c\u00f3digo Build: ferramentas de integra\u00e7\u00e3o cont\u00ednua, ferramentas de controle de vers\u00f5es, estado(historico) de constru\u00e7\u00e3o Teste: ferramentas de teste cont\u00ednuo que fornecem feedback sobre os riscos empresariais, determinam o desempenho Pacotamento: reposit\u00f3rio de artefactos, fase de pr\u00e9-entrega da aplica\u00e7\u00e3o O que vai ser lan\u00e7ado(realeases): gest\u00e3o do que alterado, aprova\u00e7\u00f5es de lan\u00e7amento, automatiza\u00e7\u00e3o de lan\u00e7amento Operacional: instala\u00e7\u00e3o de infra-estruturas, altera\u00e7\u00f5es de infra-estruturas (escalabilidade), configura\u00e7\u00e3o e gest\u00e3o de infra-estruturas, infra-estruturas como c\u00f3digo, planejamento de capacidade, gest\u00e3o de capacidade e recursos, verifica\u00e7\u00e3o de seguran\u00e7a, implanta\u00e7\u00e3o de servi\u00e7os, garantia de alta disponibilidade (HA), recupera\u00e7\u00e3o de dados, gest\u00e3o de log/backup, gest\u00e3o de bases de dados Monitoramento: monitoramento do desempenho do servi\u00e7o, monitoramento dos logs, tambem a parte da experi\u00eancia do usuario final, gest\u00e3o de incidentes(suporte, SAQ) A carreira falar e encerramento 19. Site Reliability Engineering Devops Engineer SRE Engineer DevSecOps Systems Engineer (SRE/DevOps) Cloud Engineer Especialista Analista Tech Manager SRE/DevOps Pessoa Instrutora DevOps Consultor Cloud DevOps -fonte Glassdoor ---links GUIA DEVOPS - BRASIL feito por Waltenne Carvalho @waltenne com conte\u00fado Gratuito https://github.com/waltenne/guiadevopsbrasil 90DaysOfDevOps em Ingles feito por Michael Cade https://github.com/MichaelCade/90DaysOfDevOps apresentacao devops em topicos por Henry Duong https://github.com/raycad/devops-roadmap exercicios devops [ingles] https://github.com/bregman-arie/devops-exercises github video what is DevOps? https://youtu.be/kBV8gPVZNEE TechWorld with Nana mercado https://tutano.trampos.co/13658-guia-de-profissoes-devops/#:~:text=O(a)%20profissional%20de%20DevOps,atenda%20as%20necessidades%20dos%20clientes. https://awari.com.br/guia-devops/ https://www.aprendaaws.com.br/o-que-preciso-saber-para-ser-um-devops-engineer/ AWS Code Pipeline https://www.linkedin.com/pulse/confused-do-you-know-differences-between-devops-value-blanco-mapm/?trk=public_profile_article_view azure day https://discord.com/channels/938651668587896903/940036913677611038/1013835621049057370 Referencia: https://gaea.com.br/conheca-a-incrivel-historia-do-devops/#:~:text=O%20embri%C3%A3o%20da%20hist%C3%B3ria%20do,desenvolvimento%20e%20opera%C3%A7%C3%B5es%20de%20TI. Manual de DevOps: como obter agilidade, confiabilidade e seguran\u00e7a em organ... https://www.amazon.com.br/dp/8550802697/ref=cm_sw_r_tw_dp_VMPZZK5P0JRZ1KMVBCFZ https://www.amazon.com.br/dp/8550814067/ref=cm_sw_r_tw_dp_G0HKJNXX2X2S6NC0KMPX?_encoding=UTF8&psc=1 DevOps Para Leigos https://app.minhabiblioteca.com.br/books/9788550816661 Freeman, E. DevOps Para Leigos. [Digite o Local da Editora]: Editora Alta Books, 2021. 9788550816661. Dispon\u00edvel em: https://app.minhabiblioteca.com.br/#/books/9788550816661/. Acesso em: 31 Aug 2022 Monteiro, Eduarda Rodrigues, et al. DevOps. Grupo A, 2021 https://app.minhabiblioteca.com.br/books/9786556901725 O que \u00e9 uma pipeline para desenvolvimento de softwares: para iniciantes https://thihenos.medium.com/o-que-%C3%A9-uma-pipeline-para-desenvolvimento-de-softwares-para-iniciantes-9fc26150178e DevOps github https://resources.github.com/devops/","title":"Devops"},{"location":"conte%C3%BAdos/1.devops/#devops","text":"","title":"Devops"},{"location":"conte%C3%BAdos/1.devops/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/1.devops/#rascunho-da-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre DevOps Marcello Alexandre - Curso de Redes de Computadores O que \u00e9 DevOps? N\u00e3o existe uma defini\u00e7\u00e3o espec\u00edfica por n\u00e3o haver um manifesto igual no '\u00e1gil' onde vc tem cartilha a ser \"seguida\" de forma que mesmo o devops sendo conhecido mundialmente, cada empresa adapta o conceito de acordo com as suas necessidades. E foi no evento Agile 2008 que se abriu caminhos para o DevOps, com discuss\u00f5es e debates acerca de infraestrutura \u00e1gil, ent\u00e3o no ano seguinte em 2009 surgiu o termo devops. [na imagem o manifesto agile e o link para o site] Bem o termo DevOps \u00e9 uma conjun\u00e7\u00e3o entre \u201cDevelopment\u201d (Desenvolvimento) e \u201cOperations\u201d (Opera\u00e7\u00e3o) ele surgiu com o intuito para resolver os problemas da abordagem tradicional no desenvolvimento de software onde nas metologias tradicionais a gente tinha ali papeis bem definidos (umas das mais conhecidas a cascata) A gente tem esse cen\u00e1rio onde o papel do time de desenvolvimento era converter requisitos em programas. E cabia \u00e0 equipe de opera\u00e7\u00f5es instalar e manter esses programas rodando adequadamente na infraestrutura existente. Ent\u00e3o \u00e9 aqui come\u00e7a os problemas a serem solucionados [imagem da serie ruptura apple+ sem dar spoiler da serie que pra mim \u00e9 a melhor de 2022, a serie apresenta na empresa q \u00e9 ambientado dois grupos que trabalham separadamente sem mesmo saber muito da existencia do outro mas mesmo assim existe uma especie de rivalidade mortal entre essas equipes e o deseronlar da historia \u00e9 eles se juntarem para tentar descobrir o que realmente acontece nesta empresa assim criando a trama] ent\u00e3o a gente tem esse cen\u00e1rio de dificuldade de comunica\u00e7\u00e3o entres as duas equipes em que cada um faz apenas sua parte e joga pro outro, nem preciso dizer a confus\u00e3o que isso dava Se deu pra entender bem \u00e9 aqui que o DevOps surgem em cima desse cen\u00e1rio e pra trazer essa explica\u00e7\u00e3o pra voc\u00eas eu fiz uma divis\u00e3o simb\u00f3lica onde vou falar sobre a cultura a carreira e o processo dividindo nessas 3 explica\u00e7\u00f5es porque foi a forma q me ajudou a entender e espero que facilite para voc\u00eas tamb\u00e9m Bem come\u00e7ando aqui pela cultura a solu\u00e7\u00e3o para seus problemas[imagem de gente feliz no slide] Aqui uma defini\u00e7\u00e3o do (Ken Mugragi) que \u00e9 um consultor de tecnologia ele fala bastante sobre devops fazendo palestras etc Modern Continuous Delivery \u2022 Ken Mugrage \u2022 GOTO 2020 [em ingl\u00eas] https://youtu.be/lBi85lNmKFw DevOps: Uma cultura em que as pessoas, independentemente do t\u00edtulo ou forma\u00e7\u00e3o, trabalham juntas para imaginar, desenvolver, implantar e operar um sistema. Ken Mugrage 2007: houve as primeiras iniciativas em um projeto de migra\u00e7\u00e3o de data center. Patrick Dubois (B\u00e9lgica) prop\u00f5e a cria\u00e7\u00e3o de um time de DevOps para melhorar a integra\u00e7\u00e3o e efici\u00eancia entre o time de desenvolvimento e opera\u00e7\u00f5es, pois havia um grande gargalo e um problema na cadeia de entrega.[na imagem tem o livro Manual do DevOps] 2008: Patrick Debois apresenta na Agile Conference (Toronto/CA) um modelo para solucionar os conflitos entre as \u00e1reas de desenvolvimento e opera\u00e7\u00f5es de TI, com foco em dar mais agilidade \u00e0 \u00e1rea de infraestrutura. 2009: Allspaw & Paul Hammond apresentam no Velocity (San Jose/CA) 10+ Deploys per day, propondo um novo modelo operacional para atender as mudan\u00e7as nos neg\u00f3cios. E assim, mudar a forma: \u201cDev\u2019s job is to add new features; Ops\u2019 job it to keep the site stable and fast\u201d. 2011-2012: l\u00edderes do setor de software (IBM, CA Technologies, etc.) aumentam a presen\u00e7a de DevOps tools no mercado empresarial. 2013: o livro The Phoenix Project, entre outros, traz conceitos de CI (Continuous Integration), CD (Continuous Delivery e Deployment), fundamentais para a propaga\u00e7\u00e3o das pr\u00e1ticas at\u00e9 hoje. 2014: come\u00e7a a gerar impacto positivo na \u00e1rea de TI \u2013 benef\u00edcios do DevOps. 2015: presen\u00e7a no Gartner Hype Cycle. O hype cycle identifica cinco est\u00e1gio no ciclo de vida tecnol\u00f3gico. A ideia central por tr\u00e1s do DevOps \u00e9 ter processos bem definidos, auto-matizar a\u00e7\u00f5es e possibilitar coopera\u00e7\u00e3o m\u00fatua. Dessa forma, os profissionais ficam livres para focar as suas atividades em solu\u00e7\u00f5es inteligentes (MUELLER, 2016). Com a lideran\u00e7a e o uso de ferramentas corretas, \u00e9 poss\u00edvel viabilizar um ambiente onde desenvolvedores e administradores de infraestrutura trabalhem em harmonia. A efici\u00eancia da cultura DevOps pode ser percebida quando a organiza\u00e7\u00e3o compreende o seu funcionamento. Na Figura do slide \u00e9 apresentado as \u00e1reas que se relacionam, formando o DevOps nessa interse\u00e7\u00e3o. Cada uma dessas \u00e1reas possui suas pr\u00f3prias metodologias, problemas e processos, de modo que, independentemente do setor, os profissionais devem estar aptos a resolver as problem\u00e1ticas que surgem no cotidiano. Vale lembrar que a inten\u00e7\u00e3o do DevOps \u00e9 criar formas de intera\u00e7\u00e3o entre as equipes, para que a passagem de atividades sejam simplificadas. Pilares do Devops CULTURA \u2013 Focar nas pessoas; melhorar comportamentos; abra\u00e7ar mudan\u00e7as e experimenta\u00e7\u00f5es; errar sem julgamentos (manter a seguran\u00e7a) e integrar Dev + Ops + TI + Produtos. AUTOMA\u00c7\u00c3O \u2013 Fazer pequenas e constantes entregas; integrar altera\u00e7\u00e3o de c\u00f3digo num reposit\u00f3rio central (CI); pipeline (IC, Automatiza\u00e7\u00e3o de Testes e Deploy) e orquestrar. FLUXO \u2013 Entregar valor para o usu\u00e1rio final (vis\u00e3o cliente); identificar o fluxo de valor e fazer fluir,sem interromper; enxutar processo e documenta\u00e7\u00e3o; eliminar desperd\u00edcio ( faturamento> gastos); perseguir a melhoria cont\u00ednua e fazer o simples. MEDI\u00c7\u00c3O \u2013 Medir e monitorar todo o ciclo (fluxos); identificar erros, defeitos e falhas; corrigir os problemas o quanto antes e melhorar o processo atrav\u00e9s de a\u00e7\u00f5es. COMPARTILHAMENTO \u2013 Compartilhar conhecimentos e experi\u00eancias; expor fracassos e sucessos; promover comunica\u00e7\u00e3o e colabora\u00e7\u00e3o entre os profissionais; integrar as \u00e1reas; feedbacks. Os 5 pilares devem ser seguidos e usados diariamente at\u00e9 que a Cultura DevOps seja vista como um identidade nas empresas e ela n\u00e3o \u00e9 responsabilidade de apenas um profissional, mas de todos que est\u00e3o envolvidos em todos os processos, desde do levantamento da necessidade do usu\u00e1rio at\u00e9 a coleta de feedbacks para melhorar processos, produtos e servi\u00e7os! Os objetivos do DevOps Metodologias de Desenvolvimento R\u00e1pido Metodologias R\u00e1pidas de Garantia de Qualidade Metodologias de implanta\u00e7\u00e3o r\u00e1pida Tempo de comercializa\u00e7\u00e3o mais r\u00e1pido Itera\u00e7\u00e3o e feedback cont\u00ednuo (comunica\u00e7\u00e3o forte e cont\u00ednua entre as partes interessadas - os usu\u00e1rios finais e clientes, propriet\u00e1rios de produtos, desenvolvimento, garantia de qualidade e engenheiros de produ\u00e7\u00e3o) Os benef\u00edcios do DevOps Estabiliza\u00e7\u00e3o do Ambiente Imp\u00f5e consist\u00eancia, aumenta o tempo de atividade Ciclo de desenvolvimento mais curto Gerenciar requisitos e reposit\u00f3rio de c\u00f3digo Maior velocidade de lan\u00e7amento Compila\u00e7\u00e3o cont\u00ednua, implanta\u00e7\u00f5es de bot\u00e3o Defeitos reduzidos Processos de regimento, testes automatizados M\u00e9tricas de Processo Acompanhe o tempo em cada est\u00e1gio e os erros e exce\u00e7\u00f5es O processo \"DevOps converge de Lean, gest\u00e3o e tecnologia\" -Fluxo r\u00e1pido e continuo: ir desenvolvimento que \u00e9 a ideia e colocar em produ\u00e7\u00e3o o mais rapido possivel de ponto a ponto -Feedback constante: as equipes que constroi os sistemas, aplica\u00e7\u00f5es, equipe de dev precisa do feed rapido e constante da equipe de ops como as coisas est\u00e3o funcionando ou n\u00e3o est\u00e3o funcionando entao \u00e9 fundamental esse feedback rapido e continuo e teste continuo. -aprendizado e experimenta\u00e7\u00e3o: experimentar e aprender com os erros por ser um cultura que tolerar erros -GEMUD e seguran\u00e7a continua: Gest\u00e3o de mudan\u00e7a e seguran\u00e7a da informa\u00e7\u00e3o n\u00e3o deixar por ultimo, ser trabalho ao longo da jornada e do desenvolvimento, desenvolver e testar ao mesmo tempo na esteira A integra\u00e7\u00e3o cont\u00ednua (CI, continuous integration) e a entrega cont\u00ednua (CD, continuous delivery) s\u00e3o pr\u00e1ticas da engenharia de software que visam a testar e disponibilizar o software de forma automatizada, cont\u00ednua e consistente (DESTRO; FRAN\u00c7A, 2019). Essas a\u00e7\u00f5es s\u00e3o aplicadas a projetos de desenvolvimento de software, com o intuito de manter o n\u00edvel de qualidade elevado, a estabilidade da aplica\u00e7\u00e3o e propiciar uma menor quantidade de erros. Essas pr\u00e1ticas s\u00e3o fixadas em um conjunto, intitulado pipeline, e organizadas de forma l\u00f3gica e sequencial, conforme a Figura 2. Para entender o CD \u00e9 preciso entender os tipos de servidores. O primeiro tipo \u00e9 o servidor de teste, que possui recursos limitados e \u00e9 utilizado para realizar os testes de forma mais controlada. O segundo \u00e9 o servidor de (aceita\u00e7\u00e3o)homologa\u00e7\u00e3o, que \u00e9 basicamente uma c\u00f3pia do servidor de produ\u00e7\u00e3o, possuindo integra\u00e7\u00e3o com todas as APIs (application programming interface; ou interface de programa\u00e7\u00e3o de aplica\u00e7\u00f5es, em portugu\u00eas) utilizadas. Com isso, os testes s\u00e3o realizados de forma mais fidedigna. Por fim, tem-se o servidor de produ\u00e7\u00e3o, que se refere ao ambiente final que \u00e9 acessado pelos usu\u00e1rios. Pipeline que \u00e9 uma palavra em ingles que no significado ao p\u00e9 da letra \u00e9 encanamento, aqueles tubos no supermario mas o termo \u00e9 utilizado na industria/mercado como conjunto de instru\u00e7\u00f5es ou uma ESTEIRA de processos ou comandos que algu\u00e9m ou algo deve seguir sempre, por exemplo uma pipeline de vendas, onde tem sempre os passos e estrat\u00e9gias a serem seguidas. No mundo de desenvolvimento uma pipeline(esteira) \u00e9 desenvolvida e pensada como uma forma de reduzir trabalhos manuais do nosso dia a dia : seja para testar novos codigos, quando ocorre grandes mudan\u00e7as no projeto, em teste de ferramentas necessarias, ou como valida\u00e7\u00e3o da altera\u00e7\u00e3o ent\u00e3o em um projeto onde varias pessoas estao trabalhando ao mesmo tempo de forma independente com esse processo \u00e9 possivel alcan\u00e7ar uma economia de tempo concluindo uma pipeline(esteira) \u00e9 esse conjunto de instru\u00e7\u00f5es, passos a serem executados de forma sequencial Para criar uma pipeline voc\u00ea precisa ter uma vis\u00e3o em detalhe da aplica\u00e7\u00e3o,do projeto, empresa, realmente conhecer bem para conseuir definir o tipo que ser\u00e1 implatado pois existe diversos cenarios. porem temos varias ferramentas que auxiliam/s\u00e3o utilizadas nesse processo :muitas dessas que oferecem servi\u00e7os de reposit\u00f3rio GitHub Actions \u2014 https://docs.github.com/pt/actions Azure DevOps Pipelines \u2014 https://docs.microsoft.com/pt-br/azure/architecture/example-scenario/apps/devops-dotnet-webapp GitLab Runners \u2014 https://docs.gitlab.com/runner/ Bitbucket Pipelines \u2014 https://bitbucket.org/product/br/features/pipelines :e tamb\u00e9m quem oferece servi\u00e7o focado em pipelines -CircleCI \u2014 https://circleci.com/ -Travis \u2014 https://travis-ci.org/ -Jenkins \u2014 https://www.jenkins.io/ Plano: gest\u00e3o de tarefas, hor\u00e1rios C\u00f3digo: desenvolvimento e revis\u00e3o de c\u00f3digo, ferramentas de gest\u00e3o do c\u00f3digo fonte, fus\u00e3o de c\u00f3digo Build: ferramentas de integra\u00e7\u00e3o cont\u00ednua, ferramentas de controle de vers\u00f5es, estado(historico) de constru\u00e7\u00e3o Teste: ferramentas de teste cont\u00ednuo que fornecem feedback sobre os riscos empresariais, determinam o desempenho Pacotamento: reposit\u00f3rio de artefactos, fase de pr\u00e9-entrega da aplica\u00e7\u00e3o O que vai ser lan\u00e7ado(realeases): gest\u00e3o do que alterado, aprova\u00e7\u00f5es de lan\u00e7amento, automatiza\u00e7\u00e3o de lan\u00e7amento Operacional: instala\u00e7\u00e3o de infra-estruturas, altera\u00e7\u00f5es de infra-estruturas (escalabilidade), configura\u00e7\u00e3o e gest\u00e3o de infra-estruturas, infra-estruturas como c\u00f3digo, planejamento de capacidade, gest\u00e3o de capacidade e recursos, verifica\u00e7\u00e3o de seguran\u00e7a, implanta\u00e7\u00e3o de servi\u00e7os, garantia de alta disponibilidade (HA), recupera\u00e7\u00e3o de dados, gest\u00e3o de log/backup, gest\u00e3o de bases de dados Monitoramento: monitoramento do desempenho do servi\u00e7o, monitoramento dos logs, tambem a parte da experi\u00eancia do usuario final, gest\u00e3o de incidentes(suporte, SAQ) A carreira falar e encerramento 19. Site Reliability Engineering Devops Engineer SRE Engineer DevSecOps Systems Engineer (SRE/DevOps) Cloud Engineer Especialista Analista Tech Manager SRE/DevOps Pessoa Instrutora DevOps Consultor Cloud DevOps -fonte Glassdoor ---links GUIA DEVOPS - BRASIL feito por Waltenne Carvalho @waltenne com conte\u00fado Gratuito https://github.com/waltenne/guiadevopsbrasil 90DaysOfDevOps em Ingles feito por Michael Cade https://github.com/MichaelCade/90DaysOfDevOps apresentacao devops em topicos por Henry Duong https://github.com/raycad/devops-roadmap exercicios devops [ingles] https://github.com/bregman-arie/devops-exercises github video what is DevOps? https://youtu.be/kBV8gPVZNEE TechWorld with Nana mercado https://tutano.trampos.co/13658-guia-de-profissoes-devops/#:~:text=O(a)%20profissional%20de%20DevOps,atenda%20as%20necessidades%20dos%20clientes. https://awari.com.br/guia-devops/ https://www.aprendaaws.com.br/o-que-preciso-saber-para-ser-um-devops-engineer/ AWS Code Pipeline https://www.linkedin.com/pulse/confused-do-you-know-differences-between-devops-value-blanco-mapm/?trk=public_profile_article_view azure day https://discord.com/channels/938651668587896903/940036913677611038/1013835621049057370 Referencia: https://gaea.com.br/conheca-a-incrivel-historia-do-devops/#:~:text=O%20embri%C3%A3o%20da%20hist%C3%B3ria%20do,desenvolvimento%20e%20opera%C3%A7%C3%B5es%20de%20TI. Manual de DevOps: como obter agilidade, confiabilidade e seguran\u00e7a em organ... https://www.amazon.com.br/dp/8550802697/ref=cm_sw_r_tw_dp_VMPZZK5P0JRZ1KMVBCFZ https://www.amazon.com.br/dp/8550814067/ref=cm_sw_r_tw_dp_G0HKJNXX2X2S6NC0KMPX?_encoding=UTF8&psc=1 DevOps Para Leigos https://app.minhabiblioteca.com.br/books/9788550816661 Freeman, E. DevOps Para Leigos. [Digite o Local da Editora]: Editora Alta Books, 2021. 9788550816661. Dispon\u00edvel em: https://app.minhabiblioteca.com.br/#/books/9788550816661/. Acesso em: 31 Aug 2022 Monteiro, Eduarda Rodrigues, et al. DevOps. Grupo A, 2021 https://app.minhabiblioteca.com.br/books/9786556901725 O que \u00e9 uma pipeline para desenvolvimento de softwares: para iniciantes https://thihenos.medium.com/o-que-%C3%A9-uma-pipeline-para-desenvolvimento-de-softwares-para-iniciantes-9fc26150178e DevOps github https://resources.github.com/devops/","title":"Rascunho da Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/2.linux/","text":"Linux (Sistema Operacional) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Linux Marcello Alexandre - Curso de Redes de Computadores Essa foi a primeira apresenta\u00e7\u00e3o criada por mim Tinhamos apenas inten\u00e7\u00e3o de fazer uma pequena palestra como forma de acolhimento para os novatos do curso de Redes de Computadores e que veio a se tornar um grupo no qual se reunimos para falar sobre ferramentas e assuntos relacionados ao devops.","title":"Linux (Sistema Operacional)"},{"location":"conte%C3%BAdos/2.linux/#linux-sistema-operacional","text":"","title":"Linux (Sistema Operacional)"},{"location":"conte%C3%BAdos/2.linux/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/2.linux/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Linux Marcello Alexandre - Curso de Redes de Computadores Essa foi a primeira apresenta\u00e7\u00e3o criada por mim Tinhamos apenas inten\u00e7\u00e3o de fazer uma pequena palestra como forma de acolhimento para os novatos do curso de Redes de Computadores e que veio a se tornar um grupo no qual se reunimos para falar sobre ferramentas e assuntos relacionados ao devops.","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/3.bash/","text":"Bash e Shell (Script) Slides Rascunho da Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Bash Marcello Alexandre - Curso de Redes de Computadores","title":"Bash e Shell (Script)"},{"location":"conte%C3%BAdos/3.bash/#bash-e-shell-script","text":"","title":"Bash e Shell (Script)"},{"location":"conte%C3%BAdos/3.bash/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/3.bash/#rascunho-da-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Bash Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho da Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/4.python/","text":"Python (Linguagem de Programa\u00e7\u00e3o) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Python Marcello Alexandre - Curso de Redes de Computadores","title":"Python (Linguagem de Programa\u00e7\u00e3o)"},{"location":"conte%C3%BAdos/4.python/#python-linguagem-de-programacao","text":"","title":"Python (Linguagem de Programa\u00e7\u00e3o)"},{"location":"conte%C3%BAdos/4.python/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/4.python/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Python Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/5.Git/","text":"Git e GitHub (Versionamento) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Git e GitHub Marcello Alexandre - Curso de Redes de Computadores 2. O que \u00e9 git? Se voc\u00eas j\u00e1 trabalharam em grupo sabem o quanto \u00e9 complicado e at\u00e9 frustante compartilhar arquivos ainda mais quando se tem altera\u00e7\u00f5es constantes. Como solu\u00e7\u00e3o para isso foram desenvolvidos os revisions controls , version control ou simplesmente, controle de vers\u00e3o. O maior benef\u00edcio de um controle de vers\u00e3o com certeza \u00e9 a possibilidade de v\u00e1rias pessoas trabalharem em paralelo em um mesmo projeto sem precisar ficar enviando suas altera\u00e7\u00f5es para cada membro do time, se beneficiando desta excelente ferramenta para manter c\u00f3pias de seus fontes, documentos, imagens e etc. 3. Como Toy Story 2 quase foi deletado para sempre por causa de um comando l\u00e1 em 1998 um funcionario deu o seguinte comando rm -r -f * no sistema de arquivos assim deletando completamento o filme tentaram restaurar com backup mas falhou porem um supervisora do filme que estava gravida trabalhando em homeoffice possuia uma copia para trabalhar em seu escritorio assim sendo possivel salvar boa parte do trabalho. 4. Controle de vers\u00e3o \u00e9 um sistema que registra altera\u00e7\u00f5es em um arquivo ou conjunto de arquivos ao longo do tempo para que voc\u00ea possa lembrar vers\u00f5es espec\u00edficas mais tarde. O controle de vers\u00e3o oferece a possibilidade de reverter altera\u00e7\u00f5es realizadas se alguma coisa de ruim acontecer (sabemos que essa possibilidade \u00e9 muito grande). Bem aqui a gente tem as logos de alguns dos principais controles de vers\u00e3o (SVN, Git e Mercurial) populares por serem as solu\u00e7\u00f5es livres. Essas solu\u00e7\u00f5es junto com algumas ferramentas fazem com que os controles de vers\u00e3o tornar-se um pouco mais f\u00e1cil. 5. O SVN, ou Subversion , foi fundado em 2000 pela CollabNet, Incorporado sob a Licen\u00e7a Apache. O SVN \u00e9 distribu\u00eddo como c\u00f3digo aberto e seu modelo utiliza um sistema de controle de vers\u00e3o centralizado, o que significa que todas as informa\u00e7\u00f5es e arquivos s\u00e3o armazenados em um servidor central. Vinha pra ser o substituto do CVS(Concurrent Version System) ja foi um dos controle de vers\u00e3o com a maior ado\u00e7\u00e3o no mercado, v\u00e1rios projetos open-source usaram o subversion como reposit\u00f3rio, dentre eles o Apache, Python, o Google Code tambem usa o Subversion exclusivamente para distribuir c\u00f3digo e outros. porem sua ultima vers\u00e3o ja tem mais de 6 anos. Ele era bastante popular existindo diversos clients dispon\u00edveis, geralmente para os usu\u00e1rios de windows, o TortoiseSVN era o client mais recomendado, para os usu\u00e1rios de Mac o Version era a melhor op\u00e7\u00e3o. 6. Criado em 2005 por Linus Torvalds, o Git foi projetado para manter o desenvolvimento do Kernel Linux, e hoje \u00e9 largamente utilizado pela comunidade de desenvolvedores, o Git oferece um controle de vers\u00e3o diferente, o Distributed Version Control, ou simplesmente, controle de vers\u00e3o distribu\u00eddo, com esta forma de controle n\u00e3o existe um servidor central como no SVN por exemplo, que usa vers\u00e3o centralizada, o git \u00e9 um controle de vers\u00e3o distribu\u00eddo com foco na velocidade. O que ajudou a difus\u00e3o foi a plataforma GitHub que vamos falar mais na frente. No site do git na sess\u00e3o de livro(book) voc\u00ea pode encontrar o livro 'Pro Git' totalmente de gra\u00e7a e em portugues que explica tudo sobre o git escrito por Scott Chacon e Ben Straub link na referencia 'Come\u00e7ando-Sobre-Controle-de-Vers\u00e3o' 7. O Mercurial \u00e9 outro controle de vers\u00e3o distribu\u00eddo assim como o Git, ele foi desenvolvido por Matt Mackall em 2005 para projetos de grande porte, muito al\u00e9m dos projetos simples de designers e desenvolvedores independentes, obviamente isso n\u00e3o significa que times pequenos n\u00e3o possam utiliz\u00e1-lo, o Mercurial \u00e9 extremamente r\u00e1pido e os criadores focaram na performance como recurso mais importante. Al\u00e9m de ser muito r\u00e1pido e escal\u00e1vel, o Mercurial \u00e9 mais simples que o Git, n\u00e3o existem tantas fun\u00e7\u00f5es para aprender e as fun\u00e7\u00f5es s\u00e3o similares a outros CVS\u2019s, al\u00e9m de ele vir equipado com uma interface web e ter uma excelente documenta\u00e7\u00e3o. Foi implementado principalmente em python para rodar sobre linux sendo principalmente um programa de linha de comando mas hoje esta dispon\u00edveis em todas as principais plataformas e as funcionalidades do Mercurial pode ser aumentada com extens\u00f5es oficiais ou da comunidade. SCM(source control management, Gerenciamento de c\u00f3digo-fonte) usado para gerenciar o c\u00f3digo fonte do Python, tambem \u00e9 um software livre licenciado pela GNUGPLv2 tendo seus semelhantes o Git e o Bazaar. O projeto do Mercurial foi iniciado na mesma epoca do Git com o objetivo de ser um substituto para o software de controle de revis\u00e3o BitKeeper. 8. GitHub \u00e9 uma plataforma de hospedagem de c\u00f3digo-fonte e arquivos com controle de vers\u00e3o usando o Git. O GitHub \u00e9 muito popular atualmente hospeda mais de 100 milh\u00f5es de reposit\u00f3rios, com a maior parte deles sendo projetos de c\u00f3digo aberto. \u00c9 amplamente usado por diversas empresas, sendo um dos clientes de Git GUI mais populares. Pode ver no site do git na aba downloads/guis GitHub \u00e9 um servi\u00e7o baseado em nuvem e que incorpora os recursos de controle de vers\u00e3o do Git, mas tambem \u00e9 famosa na comunidade de programadores como uma especie de rede social voltada a profissionais de TI nela voc\u00ea pode seguir e aprender com outros programadores mais experientes gerando conex\u00f5es riquissimas para estudantes, registrar projetos pessoais como uma especie de portfolio online. Foi criado em 2007 por Chris Wanstrath, J. Hyett, Tom Preston-Werner e Scott Chacon porem foi vendido em 2018 para Microsoft por US$ 7,5 Bilh\u00f5es. 9. GitHub Copilot O Copiloto GitHub \u00e9 uma ferramenta de Intelig\u00eancia artificial desenvolvida pela open.ai e o github que tens como objetivo de criar linhas de c\u00f3digo autom\u00e1ticos ou atrav\u00e9s de coment\u00e1rios, O GitHub Copilot est\u00e1 dispon\u00edvel como uma extens\u00e3o para Neovim, JetBrains e Visual Studio Code. e tem suporte a milhares de linguagens como: Python, JavaScript, TypeScript, Ruby, Java e Go, mas entende dezenas de linguagens e pode ajud\u00e1-lo a encontrar o caminho para quase tudo GitHub Pages Um servi\u00e7o de hospedagem de site est\u00e1tico usuario.io GitHub \u00e9 apenas um dos mais populares servi\u00e7os de repositorios eles tem ferramentas pagas e planos para geram sua renda e assim como qualquer servi\u00e7\u00f5s existe seus concorrentes outros como GitLab, BitBucket, SourceForge etc. 10. Como utilizar o GitHub Para utilizar o GitHub \u00e9 necess\u00e1rio criar uma conta pessoal ou uma conta de equipe. O proprio github tem um tutorial bem basico para mostra o seu ambiento criando como exemplo sua primeira intera\u00e7\u00e3o. 11. -Repositorio Reposit\u00f3rio, ou repo, \u00e9 um diret\u00f3rio onde os arquivos do seu projeto ficam armazenados, voc\u00ea pode armazenar c\u00f3digos, imagens, \u00e1udios, ou qualquer outra coisa relacionada ao projeto no diret\u00f3rio. 12. -Branch Um branch \u00e9 uma c\u00f3pia de um reposit\u00f3rio. Voc\u00ea pode utiliz\u00e1-lo para desenvolver o seu projeto individualmente, sem alterar o diret\u00f3rio original. Assim, s\u00f3 depois de finalizado, ser\u00e1 combinado novamente com o reposit\u00f3rio original. Ao criar branches, ou ramifica\u00e7\u00f5es, voc\u00ea gera vers\u00f5es diferentes de um reposit\u00f3rio. Quando voc\u00ea modifica o projeto nas branches de recursos, um desenvolvedor pode ver como isso vai afetar o projeto principal na hora que tudo for integrado. 13. -Pull e Push -Commits Os Commits \u00e9 como as mudan\u00e7as salvas no GitHub s\u00e3o chamadas. Cada vez que voc\u00ea muda o arquivo do branch de recurso, voc\u00ea ter\u00e1 que executar um Commit para mant\u00ea-lo. -pull request Para propor as mudan\u00e7as que voc\u00ea acabou de fazer para outros desenvolvedores trabalhando no mesmo projeto, voc\u00ea deve criar um pull request. Pull Requests permitem que voc\u00ea veja as diferen\u00e7as entre o projeto original e o seu branch de recurso. \u00c9 assim que voc\u00ea pede para os seus pares revis\u00e1-las. Se os outros desenvolvedores aprovarem as modifica\u00e7\u00f5es, eles podem executar um merge pull request (solicita\u00e7\u00e3o de mesclagem). Isso ir\u00e1 aplicar as mudan\u00e7as para o projeto principal. 14. -Merge Para unir as modifica\u00e7\u00f5es feitas em um branch ao c\u00f3digo original, utilizamos o comando merge. Com esta funcionalidade, todas as altera\u00e7\u00f5es feitas em c\u00f3pias manipul\u00e1veis s\u00e3o inseridas, ap\u00f3s aprovadas, no c\u00f3digo-fonte original sem complica\u00e7\u00f5es. 15. -Conteudos em videos O willian justen liberou os videos dos cursos dele que eram pagos na udemy agora no youtube e de gra\u00e7a. Willian Justen Cursos - playlists dos cursos https://www.youtube.com/c/WillianJustenCursos Git e Github para Iniciantes - 30 videos curtos https://www.youtube.com/playlist?list=PLlAbYrWSYTiPA2iEiQ2PF_A9j__C4hi0A Git e Github na Vida Real - 45 videos curtos de no maximo 9min de dura\u00e7\u00e3o https://www.youtube.com/playlist?list=PLlAbYrWSYTiNqugqFFWWsgONJsmc3eMpg Canal da Rafaella Ballerini ela tem varios videos relacionado ao github, sobre o que \u00e9, como costumir perfil pra portifolio etc https://www.youtube.com/c/rafaellaballerini Curso em video - Gustavo Guanabara https://www.youtube.com/playlist?list=PLHz_AreHm4dm7ZULPAmadvNhH6vk9oNZA DevSuperior - Nelio Alves https://www.youtube.com/watch?v=_hZf1teRFNg -Sites Criado por Peter Cottle O LearnGitBranching \u00e9 um visualizador de reposit\u00f3rio git, sandbox e uma s\u00e9rie de tutoriais e desafios educacionais. Seu objetivo principal \u00e9 ajudar os desenvolvedores a entender o git atrav\u00e9s do poder da visualiza\u00e7\u00e3o (algo que est\u00e1 ausente ao trabalhar na linha de comando). Isso \u00e9 conseguido atrav\u00e9s de um jogo com diferentes n\u00edveis para se familiarizar com os diferentes comandos do git. link do repositorio no github: https://github.com/pcottle/learnGitBranching link do jogo: https://pcottle.github.io/learnGitBranching/ referencias: https://blog.vandersonguidi.com.br/utilidade-publica/qual-o-melhor-controle-de-versao-subversiongitmercurial/ https://www.gitkraken.com/blog/git-vs-svn https://www.independent.co.uk/arts-entertainment/films/news/lightyear-toy-story-2-deleted-b2017238.html https://git-scm.com/ https://git-scm.com/book/pt-br/v2/Come\u00e7ando-Sobre-Controle-de-Vers\u00e3o https://www.mercurial-scm.org/guide https://subversion.apache.org/ https://www.hostinger.com.br/tutoriais/o-que-github https://rockcontent.com/br/blog/o-que-e-github/ https://kenzie.com.br/blog/o-que-e-git/ https://www.youtube.com/c/WillianJustenCursos https://osprogramadores.com/desafios/d01/","title":"Git e GitHub (Versionamento)"},{"location":"conte%C3%BAdos/5.Git/#git-e-github-versionamento","text":"","title":"Git e GitHub (Versionamento)"},{"location":"conte%C3%BAdos/5.Git/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/5.Git/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Git e GitHub Marcello Alexandre - Curso de Redes de Computadores 2. O que \u00e9 git? Se voc\u00eas j\u00e1 trabalharam em grupo sabem o quanto \u00e9 complicado e at\u00e9 frustante compartilhar arquivos ainda mais quando se tem altera\u00e7\u00f5es constantes. Como solu\u00e7\u00e3o para isso foram desenvolvidos os revisions controls , version control ou simplesmente, controle de vers\u00e3o. O maior benef\u00edcio de um controle de vers\u00e3o com certeza \u00e9 a possibilidade de v\u00e1rias pessoas trabalharem em paralelo em um mesmo projeto sem precisar ficar enviando suas altera\u00e7\u00f5es para cada membro do time, se beneficiando desta excelente ferramenta para manter c\u00f3pias de seus fontes, documentos, imagens e etc. 3. Como Toy Story 2 quase foi deletado para sempre por causa de um comando l\u00e1 em 1998 um funcionario deu o seguinte comando rm -r -f * no sistema de arquivos assim deletando completamento o filme tentaram restaurar com backup mas falhou porem um supervisora do filme que estava gravida trabalhando em homeoffice possuia uma copia para trabalhar em seu escritorio assim sendo possivel salvar boa parte do trabalho. 4. Controle de vers\u00e3o \u00e9 um sistema que registra altera\u00e7\u00f5es em um arquivo ou conjunto de arquivos ao longo do tempo para que voc\u00ea possa lembrar vers\u00f5es espec\u00edficas mais tarde. O controle de vers\u00e3o oferece a possibilidade de reverter altera\u00e7\u00f5es realizadas se alguma coisa de ruim acontecer (sabemos que essa possibilidade \u00e9 muito grande). Bem aqui a gente tem as logos de alguns dos principais controles de vers\u00e3o (SVN, Git e Mercurial) populares por serem as solu\u00e7\u00f5es livres. Essas solu\u00e7\u00f5es junto com algumas ferramentas fazem com que os controles de vers\u00e3o tornar-se um pouco mais f\u00e1cil. 5. O SVN, ou Subversion , foi fundado em 2000 pela CollabNet, Incorporado sob a Licen\u00e7a Apache. O SVN \u00e9 distribu\u00eddo como c\u00f3digo aberto e seu modelo utiliza um sistema de controle de vers\u00e3o centralizado, o que significa que todas as informa\u00e7\u00f5es e arquivos s\u00e3o armazenados em um servidor central. Vinha pra ser o substituto do CVS(Concurrent Version System) ja foi um dos controle de vers\u00e3o com a maior ado\u00e7\u00e3o no mercado, v\u00e1rios projetos open-source usaram o subversion como reposit\u00f3rio, dentre eles o Apache, Python, o Google Code tambem usa o Subversion exclusivamente para distribuir c\u00f3digo e outros. porem sua ultima vers\u00e3o ja tem mais de 6 anos. Ele era bastante popular existindo diversos clients dispon\u00edveis, geralmente para os usu\u00e1rios de windows, o TortoiseSVN era o client mais recomendado, para os usu\u00e1rios de Mac o Version era a melhor op\u00e7\u00e3o. 6. Criado em 2005 por Linus Torvalds, o Git foi projetado para manter o desenvolvimento do Kernel Linux, e hoje \u00e9 largamente utilizado pela comunidade de desenvolvedores, o Git oferece um controle de vers\u00e3o diferente, o Distributed Version Control, ou simplesmente, controle de vers\u00e3o distribu\u00eddo, com esta forma de controle n\u00e3o existe um servidor central como no SVN por exemplo, que usa vers\u00e3o centralizada, o git \u00e9 um controle de vers\u00e3o distribu\u00eddo com foco na velocidade. O que ajudou a difus\u00e3o foi a plataforma GitHub que vamos falar mais na frente. No site do git na sess\u00e3o de livro(book) voc\u00ea pode encontrar o livro 'Pro Git' totalmente de gra\u00e7a e em portugues que explica tudo sobre o git escrito por Scott Chacon e Ben Straub link na referencia 'Come\u00e7ando-Sobre-Controle-de-Vers\u00e3o' 7. O Mercurial \u00e9 outro controle de vers\u00e3o distribu\u00eddo assim como o Git, ele foi desenvolvido por Matt Mackall em 2005 para projetos de grande porte, muito al\u00e9m dos projetos simples de designers e desenvolvedores independentes, obviamente isso n\u00e3o significa que times pequenos n\u00e3o possam utiliz\u00e1-lo, o Mercurial \u00e9 extremamente r\u00e1pido e os criadores focaram na performance como recurso mais importante. Al\u00e9m de ser muito r\u00e1pido e escal\u00e1vel, o Mercurial \u00e9 mais simples que o Git, n\u00e3o existem tantas fun\u00e7\u00f5es para aprender e as fun\u00e7\u00f5es s\u00e3o similares a outros CVS\u2019s, al\u00e9m de ele vir equipado com uma interface web e ter uma excelente documenta\u00e7\u00e3o. Foi implementado principalmente em python para rodar sobre linux sendo principalmente um programa de linha de comando mas hoje esta dispon\u00edveis em todas as principais plataformas e as funcionalidades do Mercurial pode ser aumentada com extens\u00f5es oficiais ou da comunidade. SCM(source control management, Gerenciamento de c\u00f3digo-fonte) usado para gerenciar o c\u00f3digo fonte do Python, tambem \u00e9 um software livre licenciado pela GNUGPLv2 tendo seus semelhantes o Git e o Bazaar. O projeto do Mercurial foi iniciado na mesma epoca do Git com o objetivo de ser um substituto para o software de controle de revis\u00e3o BitKeeper. 8. GitHub \u00e9 uma plataforma de hospedagem de c\u00f3digo-fonte e arquivos com controle de vers\u00e3o usando o Git. O GitHub \u00e9 muito popular atualmente hospeda mais de 100 milh\u00f5es de reposit\u00f3rios, com a maior parte deles sendo projetos de c\u00f3digo aberto. \u00c9 amplamente usado por diversas empresas, sendo um dos clientes de Git GUI mais populares. Pode ver no site do git na aba downloads/guis GitHub \u00e9 um servi\u00e7o baseado em nuvem e que incorpora os recursos de controle de vers\u00e3o do Git, mas tambem \u00e9 famosa na comunidade de programadores como uma especie de rede social voltada a profissionais de TI nela voc\u00ea pode seguir e aprender com outros programadores mais experientes gerando conex\u00f5es riquissimas para estudantes, registrar projetos pessoais como uma especie de portfolio online. Foi criado em 2007 por Chris Wanstrath, J. Hyett, Tom Preston-Werner e Scott Chacon porem foi vendido em 2018 para Microsoft por US$ 7,5 Bilh\u00f5es. 9. GitHub Copilot O Copiloto GitHub \u00e9 uma ferramenta de Intelig\u00eancia artificial desenvolvida pela open.ai e o github que tens como objetivo de criar linhas de c\u00f3digo autom\u00e1ticos ou atrav\u00e9s de coment\u00e1rios, O GitHub Copilot est\u00e1 dispon\u00edvel como uma extens\u00e3o para Neovim, JetBrains e Visual Studio Code. e tem suporte a milhares de linguagens como: Python, JavaScript, TypeScript, Ruby, Java e Go, mas entende dezenas de linguagens e pode ajud\u00e1-lo a encontrar o caminho para quase tudo GitHub Pages Um servi\u00e7o de hospedagem de site est\u00e1tico usuario.io GitHub \u00e9 apenas um dos mais populares servi\u00e7os de repositorios eles tem ferramentas pagas e planos para geram sua renda e assim como qualquer servi\u00e7\u00f5s existe seus concorrentes outros como GitLab, BitBucket, SourceForge etc. 10. Como utilizar o GitHub Para utilizar o GitHub \u00e9 necess\u00e1rio criar uma conta pessoal ou uma conta de equipe. O proprio github tem um tutorial bem basico para mostra o seu ambiento criando como exemplo sua primeira intera\u00e7\u00e3o. 11. -Repositorio Reposit\u00f3rio, ou repo, \u00e9 um diret\u00f3rio onde os arquivos do seu projeto ficam armazenados, voc\u00ea pode armazenar c\u00f3digos, imagens, \u00e1udios, ou qualquer outra coisa relacionada ao projeto no diret\u00f3rio. 12. -Branch Um branch \u00e9 uma c\u00f3pia de um reposit\u00f3rio. Voc\u00ea pode utiliz\u00e1-lo para desenvolver o seu projeto individualmente, sem alterar o diret\u00f3rio original. Assim, s\u00f3 depois de finalizado, ser\u00e1 combinado novamente com o reposit\u00f3rio original. Ao criar branches, ou ramifica\u00e7\u00f5es, voc\u00ea gera vers\u00f5es diferentes de um reposit\u00f3rio. Quando voc\u00ea modifica o projeto nas branches de recursos, um desenvolvedor pode ver como isso vai afetar o projeto principal na hora que tudo for integrado. 13. -Pull e Push -Commits Os Commits \u00e9 como as mudan\u00e7as salvas no GitHub s\u00e3o chamadas. Cada vez que voc\u00ea muda o arquivo do branch de recurso, voc\u00ea ter\u00e1 que executar um Commit para mant\u00ea-lo. -pull request Para propor as mudan\u00e7as que voc\u00ea acabou de fazer para outros desenvolvedores trabalhando no mesmo projeto, voc\u00ea deve criar um pull request. Pull Requests permitem que voc\u00ea veja as diferen\u00e7as entre o projeto original e o seu branch de recurso. \u00c9 assim que voc\u00ea pede para os seus pares revis\u00e1-las. Se os outros desenvolvedores aprovarem as modifica\u00e7\u00f5es, eles podem executar um merge pull request (solicita\u00e7\u00e3o de mesclagem). Isso ir\u00e1 aplicar as mudan\u00e7as para o projeto principal. 14. -Merge Para unir as modifica\u00e7\u00f5es feitas em um branch ao c\u00f3digo original, utilizamos o comando merge. Com esta funcionalidade, todas as altera\u00e7\u00f5es feitas em c\u00f3pias manipul\u00e1veis s\u00e3o inseridas, ap\u00f3s aprovadas, no c\u00f3digo-fonte original sem complica\u00e7\u00f5es. 15. -Conteudos em videos O willian justen liberou os videos dos cursos dele que eram pagos na udemy agora no youtube e de gra\u00e7a. Willian Justen Cursos - playlists dos cursos https://www.youtube.com/c/WillianJustenCursos Git e Github para Iniciantes - 30 videos curtos https://www.youtube.com/playlist?list=PLlAbYrWSYTiPA2iEiQ2PF_A9j__C4hi0A Git e Github na Vida Real - 45 videos curtos de no maximo 9min de dura\u00e7\u00e3o https://www.youtube.com/playlist?list=PLlAbYrWSYTiNqugqFFWWsgONJsmc3eMpg Canal da Rafaella Ballerini ela tem varios videos relacionado ao github, sobre o que \u00e9, como costumir perfil pra portifolio etc https://www.youtube.com/c/rafaellaballerini Curso em video - Gustavo Guanabara https://www.youtube.com/playlist?list=PLHz_AreHm4dm7ZULPAmadvNhH6vk9oNZA DevSuperior - Nelio Alves https://www.youtube.com/watch?v=_hZf1teRFNg -Sites Criado por Peter Cottle O LearnGitBranching \u00e9 um visualizador de reposit\u00f3rio git, sandbox e uma s\u00e9rie de tutoriais e desafios educacionais. Seu objetivo principal \u00e9 ajudar os desenvolvedores a entender o git atrav\u00e9s do poder da visualiza\u00e7\u00e3o (algo que est\u00e1 ausente ao trabalhar na linha de comando). Isso \u00e9 conseguido atrav\u00e9s de um jogo com diferentes n\u00edveis para se familiarizar com os diferentes comandos do git. link do repositorio no github: https://github.com/pcottle/learnGitBranching link do jogo: https://pcottle.github.io/learnGitBranching/ referencias: https://blog.vandersonguidi.com.br/utilidade-publica/qual-o-melhor-controle-de-versao-subversiongitmercurial/ https://www.gitkraken.com/blog/git-vs-svn https://www.independent.co.uk/arts-entertainment/films/news/lightyear-toy-story-2-deleted-b2017238.html https://git-scm.com/ https://git-scm.com/book/pt-br/v2/Come\u00e7ando-Sobre-Controle-de-Vers\u00e3o https://www.mercurial-scm.org/guide https://subversion.apache.org/ https://www.hostinger.com.br/tutoriais/o-que-github https://rockcontent.com/br/blog/o-que-e-github/ https://kenzie.com.br/blog/o-que-e-git/ https://www.youtube.com/c/WillianJustenCursos https://osprogramadores.com/desafios/d01/","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/6.Cloud/","text":"Nuvem (Cloud) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Nuvem (Cloud) Marcello Alexandre - Curso de Redes de Computadores","title":"Nuvem (Cloud)"},{"location":"conte%C3%BAdos/6.Cloud/#nuvem-cloud","text":"","title":"Nuvem (Cloud)"},{"location":"conte%C3%BAdos/6.Cloud/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/6.Cloud/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Nuvem (Cloud) Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/7.Docker/","text":"Docker (Containers) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Marcello Alexandre - Curso de Redes de Computadores","title":"Docker (Containers)"},{"location":"conte%C3%BAdos/7.Docker/#docker-containers","text":"","title":"Docker (Containers)"},{"location":"conte%C3%BAdos/7.Docker/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/7.Docker/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/8.YAML/","text":"YAML (Serializa\u00e7\u00e3o) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Marcello Alexandre - Curso de Redes de Computadores","title":"YAML (Serializa\u00e7\u00e3o)"},{"location":"conte%C3%BAdos/8.YAML/#yaml-serializacao","text":"","title":"YAML (Serializa\u00e7\u00e3o)"},{"location":"conte%C3%BAdos/8.YAML/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/8.YAML/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/9.IaC/","text":"Infraestrutura como Codigo (Infra as Code) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre Marcello Alexandre - Curso de Redes de Computadores","title":"Infraestrutura como Codigo (Infra as Code)"},{"location":"conte%C3%BAdos/9.IaC/#infraestrutura-como-codigo-infra-as-code","text":"","title":"Infraestrutura como Codigo (Infra as Code)"},{"location":"conte%C3%BAdos/9.IaC/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/9.IaC/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho Apresenta\u00e7\u00e3o"},{"location":"conte%C3%BAdos/Kubernetes/","text":"Kubernetes (Sistema de Orquestra\u00e7\u00e3o) Slides Rascunho Apresenta\u00e7\u00e3o Uma apresenta\u00e7\u00e3o sobre k8s Marcello Alexandre - Curso de Redes de Computadores","title":"Kubernetes (Sistema de Orquestra\u00e7\u00e3o)"},{"location":"conte%C3%BAdos/Kubernetes/#kubernetes-sistema-de-orquestracao","text":"","title":"Kubernetes (Sistema de Orquestra\u00e7\u00e3o)"},{"location":"conte%C3%BAdos/Kubernetes/#slides","text":"","title":"Slides"},{"location":"conte%C3%BAdos/Kubernetes/#rascunho-apresentacao","text":"Uma apresenta\u00e7\u00e3o sobre k8s Marcello Alexandre - Curso de Redes de Computadores","title":"Rascunho Apresenta\u00e7\u00e3o"}]}